# ------------------------------------------------ #
# !!!   THIS FILE WAS GENERATED BY GRAPHQL     !!! #
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF    !!! #
#             Version: 1.0.0                       #
# ------------------------------------------------ #

type Query {
    posts(args: PostsArgs!): PostsType!
}

type PostsType {
    list: [PostType!]!
    total: Float!
}

type PostType implements BaseType {
    id: ID!
    text: String!
    createdAt: DateTime!
    votes: VotesType!
    userVote: VoteTypeEnum
}

interface BaseType {
    id: ID!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type VotesType {
    positive: [VoteType!]!
    negative: [VoteType!]!
}

type VoteType implements BaseType {
    id: ID!
    userId: String!
    type: VoteTypeEnum!
}

enum VoteTypeEnum {
    NEGATIVE
    POSITIVE
}

input PostsArgs {
    skip: Float!
}

type Mutation {
    createVote(input: CreateVoteInput!): CreateVotePayload!
    createPost(input: CreatePostInput!): CreatePostPayload!
}

type CreateVotePayload {
    vote: VoteType!
}

input CreateVoteInput {
    userId: String!
    postId: ID!
    type: VoteTypeEnum!
}

type CreatePostPayload {
    post: PostType!
}

input CreatePostInput {
    text: String!
}
